{"version":3,"sources":["components/MyNewApp.js","App.js","reportWebVitals.js","index.js"],"names":["MyNewApp","useState","valueA","setValueA","valueB","setValueB","operation","setOperation","result","setResult","className","type","value","onChange","e","target","onClick","parseInt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOA2DeA,EAxDG,WAGd,MAA6BC,mBAAS,GAAtC,mBAAQC,EAAR,KAAgBC,EAAhB,KACA,EAA6BF,mBAAS,GAAtC,mBAAQG,EAAR,KAAgBC,EAAhB,KACA,EAAmCJ,mBAAS,KAA5C,mBAAQK,EAAR,KAAmBC,EAAnB,KACA,EAA6BN,mBAAS,GAAtC,mBAAQO,EAAR,KAAgBC,EAAhB,KAoBA,OACI,qBAAKC,UAAU,mBAAf,SAEI,sBAAKA,UAAU,6BAAf,UAGC,gDACA,4CAAeF,KAEf,+EACI,uBAAOG,KAAK,OAAOC,MAAOV,EAAQW,SAAW,SAACC,GAAD,OAAOX,EAAUW,EAAEC,OAAOH,UACvE,uBAFJ,IAEU,6BAAKN,IACX,uBAAOK,KAAK,OAAOC,MAAOR,EAAQS,SAAW,SAACC,GAAD,OAAOT,EAAUS,EAAEC,OAAOH,UACvE,uBACA,wBAAQI,QA9BA,WACC,MAAdV,GAECG,EAAWQ,SAASf,GAAUe,SAASb,IAE1B,MAAdE,GACAG,EAAWP,EAASE,GAEN,MAAdE,GACAG,EAAWP,EAASE,GAEN,MAAdE,GACAG,EAAWP,EAASE,IAkBf,uBAGJ,wBAAQY,QAAS,kBAAMT,EAAa,MAApC,eACA,wBAAQS,QAAS,kBAAMT,EAAa,MAApC,eACA,wBAAQS,QAAS,kBAAMT,EAAa,MAApC,eACA,wBAAQS,QAAS,kBAAMT,EAAa,MAApC,qB,YCnCEW,MARf,WACE,OACQ,mCACA,cAAC,EAAD,OCGKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.16b93118.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport './MyNewApp.css'\r\n\r\nconst  MyNewApp = () =>  {\r\n\r\n    //DEĞİŞKNELERİMİZ DEĞİŞKENFUNCTİLARIMIZ(GUNCEELME)   BAŞLANGIÇDEĞERLERİMİ<\r\n    const  [valueA, setValueA] = useState(0);\r\n    const  [valueB, setValueB] = useState(0);\r\n    const  [operation, setOperation] = useState('+')\r\n    const  [result, setResult] = useState(0)\r\n\r\n\r\n\r\n    const handleSubmit = () => {\r\n         if(operation === '+'){\r\n                        \r\n             setResult( parseInt(valueA) + parseInt(valueB));\r\n         }\r\n         if(operation === '-'){\r\n            setResult( valueA - valueB);\r\n         }\r\n         if(operation === '*'){\r\n            setResult( valueA * valueB);\r\n         }\r\n         if(operation === '/'){\r\n            setResult( valueA / valueB);\r\n         }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container border\">\r\n  \r\n            <div className=\"calculatorArea text-center\">\r\n\r\n           \r\n             <h1>CALCULATOR APP</h1>\r\n             <h3> RESULT : {result}</h3>\r\n\r\n             <div>                                            {/* onChnage(yazılan değerle değiştir 0'ı)input kısmına girilen texti değer olarak göster ve hedefle*/}\r\n                 <input type=\"text\" value={valueA} onChange={ (e) => setValueA(e.target.value)}/>\r\n                 <br/> <h3>{operation}</h3>\r\n                 <input type=\"text\" value={valueB} onChange={ (e) => setValueB(e.target.value)}/>\r\n                 <br/>\r\n                 <button onClick={handleSubmit}>RESULT</button>\r\n             </div>\r\n\r\n             <button onClick={() => setOperation('+')}>+</button>\r\n             <button onClick={() => setOperation('-')}>-</button>\r\n             <button onClick={() => setOperation('*')}>x</button>\r\n             <button onClick={() => setOperation('/')}>/</button>\r\n\r\n           </div>\r\n        \r\n          \r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyNewApp\r\n","import React from 'react';\nimport MyNewApp from './components/MyNewApp';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nfunction App() {\n  return (\n          <>\n          <MyNewApp/>\n          </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}